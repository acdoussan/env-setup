---
# install emacs for macos
- name: Check if emacs is installed
  stat:
    path: "{{ homebrew_cask_appdir }}/Emacs.app"
  register: emacs_installed
  when: ansible_os_family == "Darwin"

- name: Ensure emacs is installed for ARM.
  copy:
    src: "/opt/homebrew/Cellar/emacs-plus@27/27.2/Emacs.app"
    dest: "{{ homebrew_cask_appdir }}"
    remote_src: yes
  when: emacs_installed.stat.exists is false and ansible_machine == 'arm64' and ansible_os_family == "Darwin"

- name: Ensure emacs is installed for Intel.
  copy:
    src: "/usr/local/Cellar/emacs-plus@27/27.2/Emacs.app"
    dest: "{{ homebrew_cask_appdir }}"
    remote_src: yes
  when: emacs_installed.stat.exists is false and ansible_machine != 'arm64' and ansible_os_family == "Darwin"

# install emacs for RedHat flavored linux

- name: Ensure emacs is installed for RedHat.
  package:
    name: emacs
    state: present
  when: ansible_os_family == "RedHat"

- name: check if centaur readme file is present
  stat:
    path: ~/.emacs.d/README.md
  register: centaur_readme_file

- name: check if emacs folder is present
  stat:
    path: ~/.emacs.d
  register: emacs_folder

- name: move .emacs.d if it exists but does not have readme
  command: mv ~/.emacs.d ~/.emacs.d.bak
  when: emacs_folder.stat.exists and centaur_readme_file.stat.exists is false

- name: install centaur emacs.
  command: git clone --depth 1 https://github.com/seagle0128/.emacs.d.git ~/.emacs.d
  when: centaur_readme_file.stat.exists is false

- name: Set config files.
  set_fact:
    emacs_config_files:
      - .emacs.d/custom.el
      - .emacs.d/custom-post.el

- name: Ensure emacs config files are links.
  command: "ls -F {{ dotfiles_home }}/{{ item }}"
  register: existing_config_file_info
  failed_when: false
  check_mode: false
  changed_when: false
  with_items: "{{ emacs_config_files }}"

- name: Remove existing emacs config files if a replacement is being linked.
  file:
    path: "{{ dotfiles_home }}/{{ dotfiles_files[item.0] }}"
    state: absent
  when: "'@' not in item.1.stdout"
  with_indexed_items: "{{ existing_config_file_info.results }}"

- name: Link config files.
  file:
    src: "{{ dotfiles_repo_local_destination }}/{{ item }}"
    dest: "{{ dotfiles_home }}/{{ item }}"
    state: link
    mode: 0644
  become: false
  with_items: "{{ emacs_config_files }}"
